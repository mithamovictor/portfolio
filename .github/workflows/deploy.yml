name: Deploy portfolio website

on:
    push:
        branches:
            - main

env:
    DEPLOY_PATH: /home/vic/${{ github.event.repository.name }}

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            # --- Setup SSH like GitLab's before_script ---
            - name: üöÄ Checkout (for metadata)
              uses: actions/checkout@v4

            - name: üîë Setup SSH agent
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            - name: üì° Add server to known_hosts
              run: |
                  mkdir -p ~/.ssh
                  ssh-keyscan -H ${{ secrets.TARGET_SERVER_HOST }} >> ~/.ssh/known_hosts

            # --- Stage: clone ---
            - name: üîÑ Clone project on server
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.TARGET_SERVER_USER }}@${{ secrets.TARGET_SERVER_HOST }} "
                    if [ ! -d '$DEPLOY_PATH/.git' ]; then
                      echo 'üìÇ Project not found. Cloning...';
                      mkdir -p '$DEPLOY_PATH';
                      git clone --branch ${{ github.ref_name }} git@github.com:${{ github.repository }}.git '$DEPLOY_PATH';
                    else
                      echo '‚úÖ Project already exists. Fetching latest...';
                      cd '$DEPLOY_PATH';
                      git fetch origin;
                    fi
                  "

            # --- Stage: setup ---
            - name: üõ† Setup project on server
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.TARGET_SERVER_USER }}@${{ secrets.TARGET_SERVER_HOST }} "
                    cd '$DEPLOY_PATH'
                    git checkout -B ${{ github.ref_name }} origin/${{ github.ref_name }}
                    git pull origin ${{ github.ref_name }}
                  "

            # --- Stage: build ---
            - name: üèó Build project on server
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.TARGET_SERVER_USER }}@${{ secrets.TARGET_SERVER_HOST }} "
                    cd '$DEPLOY_PATH'
                    pnpm install
                  "

            # --- Stage: deploy ---
            - name: üöÄ Deploy with PM2
              run: |
                BRANCH=${{ github.ref_name }}
                FRONTEND_PORT=3002

                ssh -o StrictHostKeyChecking=no ${{ secrets.TARGET_SERVER_USER }}@${{ secrets.TARGET_SERVER_HOST }} "
                  set -e
                  cd '$DEPLOY_PATH'

                  export CI_PROJECT_NAME='${{ github.event.repository.name }}'
                  export CI_COMMIT_BRANCH=${BRANCH}
                  export FRONTEND_PORT=${FRONTEND_PORT}

                  pm2 stop \"\$CI_PROJECT_NAME-\$CI_COMMIT_BRANCH\" || true
                  pm2 delete \"\$CI_PROJECT_NAME-\$CI_COMMIT_BRANCH\" || true

                  echo 'üèó Building and starting app...'
                  pnpm build
                  pm2 start "pnpm start -- -p $FRONTEND_PORT" --name "$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
                  pm2 save
                "
